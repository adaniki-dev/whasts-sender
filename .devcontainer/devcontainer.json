{
    "name": "Go WhatsApp API Dev Environment",
    "dockerComposeFile": "docker-compose.yml",
    "service": "app",
    "workspaceFolder": "/workspaces/nexus-go",
    // Configure tool-specific properties
    "customizations": {
        "vscode": {
            "extensions": [
                "golang.go",
                "ms-vscode.vscode-json",
                "ms-vscode-remote.remote-containers",
                "redhat.vscode-yaml",
                "ms-azuretools.vscode-docker",
                "bradlc.vscode-tailwindcss",
                "esbenp.prettier-vscode",
                "github.copilot",
                "github.copilot-chat",
                "ms-vscode.makefile-tools",
                "humao.rest-client",
                "rangav.vscode-thunder-client"
            ],
            "settings": {
                "go.toolsManagement.checkForUpdates": "local",
                "go.useLanguageServer": true,
                "go.gopath": "/go",
                "go.goroot": "/usr/local/go",
                "go.testFlags": [
                    "-v"
                ],
                "go.buildFlags": [],
                "go.lintFlags": [],
                "go.vetFlags": [],
                "go.coverOnSave": false,
                "go.coverOnSingleTest": false,
                "go.coverageDecorator": {
                    "type": "gutter",
                    "coveredHighlightColor": "rgba(64,128,128,0.5)",
                    "uncoveredHighlightColor": "rgba(128,64,64,0.25)"
                },
                "go.testEnvVars": {},
                "go.testTimeout": "30s",
                "terminal.integrated.shell.linux": "/bin/bash",
                "files.eol": "\n",
                "editor.insertSpaces": true,
                "editor.tabSize": 4,
                "[go]": {
                    "editor.tabSize": 4,
                    "editor.insertSpaces": false,
                    "editor.formatOnSave": true,
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": "explicit"
                    }
                },
                "[json]": {
                    "editor.tabSize": 2
                },
                "[yaml]": {
                    "editor.tabSize": 2
                },
                "[dockerfile]": {
                    "editor.tabSize": 2
                }
            }
        }
    },
    // Features to add to the dev container
    "features": {
        "ghcr.io/devcontainers/features/git:1": {},
        "ghcr.io/devcontainers/features/github-cli:1": {},
        "ghcr.io/devcontainers/features/docker-in-docker:2": {},
        "ghcr.io/devcontainers/features/common-utils:2": {
            "installZsh": true,
            "installOhMyZsh": true,
            "upgradePackages": true,
            "username": "vscode",
            "uid": "1000",
            "gid": "1000"
        }
    },
    // Use 'forwardPorts' to make a list of ports inside the container available locally
    "forwardPorts": [
        8080,
        5672,
        15672
    ],
    "portsAttributes": {
        "8080": {
            "label": "WhatsApp API",
            "onAutoForward": "notify"
        },
        "5672": {
            "label": "RabbitMQ AMQP",
            "onAutoForward": "silent"
        },
        "15672": {
            "label": "RabbitMQ Management",
            "onAutoForward": "silent"
        }
    },
    // Use 'postCreateCommand' to run commands after the container is created
    "postCreateCommand": "go mod download && go install -a github.com/cosmtrek/air@latest && go install github.com/swaggo/swag/cmd/swag@latest",
    // Configure tool-specific properties
    "remoteUser": "vscode",
    // Set environment variables
    "containerEnv": {
        "GO111MODULE": "on",
        "GOPROXY": "https://proxy.golang.org,direct",
        "GOSUMDB": "sum.golang.org"
    },
    // Mount the local file system
    "mounts": [
        "source=nexus-go-vscode-extensions,target=/home/vscode/.vscode-server/extensions,type=volume",
        "source=nexus-go-go-modules,target=/go/pkg/mod,type=volume"
    ]
}